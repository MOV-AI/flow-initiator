# WARNING:
#   This configuration is for local development. Do not use it in a production deployment.
#
# Feel free to modify this file to suit your needs.
---
version: "3.9"
x-movai-common:
  &movai-common
  environment:
    &movai-common-env
    MOVAI_ENV: ${MOVAI_ENV:-qa}
    LOGLEVEL: WARNING
    MOVAI_USERSPACE: /opt/mov.ai/user
    MOVAI_MANAGER_URI: http://localhost
    MOVAI_DEVICE_NAME: flow-initiator-test
    FLEET_NAME: flow-initiator-test
    FLEET_TOKEN: flow-initiator-test
    REDIS_LOCAL_PORT: 6379
    REDIS_LOCAL_HOST: redis-local
    REDIS_MASTER_PORT: 6379
    REDIS_MASTER_HOST: redis-master
    ROS_MASTER_URI: http://ros-master:11311/
    PUBLIC_IP: 127.0.0.1
    LOG_HTTP_HOST:
    APT_AUTOINSTALL: "once"
    APT_KEYS_URL_LIST: "https://artifacts.cloud.mov.ai/repository/movai-applications/gpg"
    APT_REPOS_LIST: "deb [arch=all] https://artifacts.cloud.mov.ai/repository/ppa-testing testing main"

services:
  redis-master:
    image: ${MOVAI_REGISTRY:-pubregistry.aws.cloud.mov.ai}/ce/redis2:v1.0.6
    container_name: redis-master-${MOVAI_DEVICE_NAME}
    networks:
      - private
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/6379"]
      start_period: 3s
      interval: 10s
      timeout: 2s
      retries: 3
    volumes:
      - redis-master-flow-initiator-test-volume:/data
    environment:
      <<: *movai-common-env
      APT_INSTALL_LIST:

  redis-local:
    image: ${MOVAI_REGISTRY:-pubregistry.aws.cloud.mov.ai}/ce/redis2:v1.0.6
    container_name: redis-local-${MOVAI_DEVICE_NAME}
    networks:
        - private
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/6380"]
      start_period: 3s
      interval: 10s
      timeout: 2s
      retries: 3
    volumes:
      - redis-local-flow-initiator-test-volume:/data
    environment:
      <<: *movai-common-env
      APT_INSTALL_LIST:

  backend:
    <<: *movai-common
    image: ${MOVAI_REGISTRY:-registry.cloud.mov.ai}/qa/backend-noetic:2.4.1.13
    container_name: backend-${MOVAI_DEVICE_NAME}
    networks:
      - private
      # - proxy
    depends_on:
      - redis-local
      - redis-master
    environment:
      <<: *movai-common-env
      APT_INSTALL_LIST: "movai-launcher=2.4.0-4,movai-adminboard=2.4.0-6,movai-fleetmanager=2.4.0-11,movai-ide=2.4.0-9,movai-taskmanager=2.4.0-6"
      MOVAI_STDOUT_VERBOSITY_LEVEL: 10
      MOVAI_HEALTHNODE_VERBOSITY_LEVEL: 10
      MOVAI_LOGFILE_VERBOSITY_LEVEL: 10
      MOVAI_GENERAL_VERBOSITY_LEVEL: 10
      HTTP_PORT: 5004
      DEFAULT_USERNAME: default
      DEFAULT_PASSWORD: test@1234
      MOVAI_USERNAME: movai
      MOVAI_PASSWORD: test@1234
      JWT_SECRET_KEY: 'some_random_string'
    ports:
      - 8084:5004
    healthcheck:
      test: ["CMD", "echo", ">", "/dev/tcp/localhost/5004"]
      start_period: 5s
      interval: 10s
      timeout: 2s
      retries: 3

  spawner:
    <<: *movai-common
    # image: ${MOVAI_REGISTRY:-pubregistry.aws.cloud.mov.ai}/ce/spawner-ign-noetic:v3.0.10
    build:
      context: ../
      dockerfile: docker/${FLOW_INITIATOR_DISTRO:-noetic}/Dockerfile
    privileged: true
    networks:
      - private
    depends_on:
      redis-local:
        condition: service_healthy
      redis-master:
        condition: service_healthy
      backend:
        condition: service_healthy
    healthcheck:
      test: pgrep -f "/usr/bin/python3 -m flow_initiator"
      start_period: 10s
      interval: 10s
      timeout: 3s
      retries: 1
    container_name: spawner-$MOVAI_DEVICE_NAME
    logging:
      driver: "journald"
      options:
        mode: "non-blocking"
        max-buffer-size: "4m"
    volumes:
      - /dev:/dev
      - /sys/devices:/sys/devices
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      - /run/movai:/var/run/movai
      - ./userspace:/opt/mov.ai/user
      - ./shared:/opt/mov.ai/shared
      - ./logs:/opt/mov.ai/logs
    environment:
      <<: *movai-common-env
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      APP_NAME: spawner
      APT_INSTALL_LIST: $FLOW_INITIATOR_SPAWNER_PACKAGES
    # restart: unless-stopped

volumes:
  redis-master-flow-initiator-test-volume:
  redis-local-flow-initiator-test-volume:

networks:
  # proxy:
  #   name: test-proxy
  private:
    name: test-private
